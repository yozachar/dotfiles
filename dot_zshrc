# If not running interactively, do nothing
[[ $- != *i* ]] && return

# append path
append_path() {
	case ":$PATH:" in
	*:"$1":*) ;;
	*)
		export PATH="${PATH:+$PATH:}$1"
		;;
	esac
}

# remove path
remove_path() {
    TEMP=":$PATH:"
    TEMP="${TEMP/:$1:/:}"
    TEMP="${TEMP%:}"
    TEMP="${TEMP#:}"
    export PATH="$TEMP"
}

# zsh
HISTFILE="$HOME/.zsh_history"
HISTSIZE=100000
SAVEHIST="$HISTSIZE"
setopt APPEND_HISTORY       # append rather then overwrite
setopt INC_APPEND_HISTORY   # add history immediately after typing a command
setopt INTERACTIVE_COMMENTS # enables interactive comments

# env
export EDITOR=micro
export GCM_CREDENTIAL_STORE=secretservice
export CHROOT="$HOME/.chroot"
# auto set by rtx
# export JAVA_HOME="$HOME/.local/share/rtx/installs/java/openjdk-17"
export PNPM_HOME="$HOME/.local/share/pnpm"
export RYE_NO_AUTO_INSTALL=1
export MEILI_NO_ANALYTICS=true

# aliases
alias ls='exa -g -h --group-directories-first'
alias ols='ls --octal-permissions'
alias cat='bat -p'
# alias man='tldr'
alias which='whence -p'
alias rg='rg --engine=auto'
#alias docker='podman'

# functions
psl() {
	code=047
	print -P -- "\n%F{$code}Processes:%f"
	podman ps -a
	print -P -- "\n%F{$code}Pods:%f"
	podman pod ls
	print -P -- "\n%F{$code}Containers:%f"
	podman container ls -a
	print -P -- "\n%F{$code}Images:%f"
	podman image ls
	print -P -- "\n%F{$code}Volumes:%f"
	podman volume ls
	print -P -- "\n%F{$code}Networks:%f"
	podman network ls
	print -P -- "\n%F{$code}Secrets:%f"
	podman secret ls
	printf ""
}

# keybindings
source "$HOME/.zsh_keybindings"

# download znap, if it's not yet
[[ -f "$HOME/.znap/src/znap.zsh" ]] ||
	git clone --depth 1 -- 'https://github.com/marlonrichert/zsh-snap.git' "$HOME/.znap/src"
# set znap repo directory
zstyle ':znap:*' repos-dir "$HOME/.znap/repos"

# source znap
source "$HOME/.znap/src/znap.zsh"

# znap plugins
znap source zsh-users/zsh-autosuggestions
znap source zsh-users/zsh-syntax-highlighting

# paths
#append_path "$PNPM_HOME"
# done in ~/.zprofile
#append_path "$HOME/.local/bin"
remove_path "$HOME/.local/share/rtx/shims"

# eval
znap eval pipx-completions 'register-python-argcomplete pipx'
znap eval rtx 'rtx activate zsh'

# completions
#znap fpath _rustup 'rustup completions zsh'
#znap fpath _cargo 'rustup completions zsh cargo'
znap fpath _rtx 'rtx completion zsh'

unset -f append_path
unset -f remove_path

# end
znap eval starship 'starship init zsh --print-full-init'
fastfetch
znap prompt
